{"version":3,"sources":["services/persons.js","App.js","serviceWorker.js","index.js"],"names":["services_persons","axios","get","newObject","post","id","delete","concat","Notification","_ref","message","react_default","a","createElement","className","ErorrMessage","_ref2","Filter","props","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","handleRemove","name","persons","find","per","window","confirm","personService","then","updatedPersons","filter","person","setPersons","setNotification","setTimeout","length","map","key","number","onClick","toUpperCase","includes","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","notification","_useState11","_useState12","errorMessage","setError","useEffect","response","data","App_ErorrMessage","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","nameObject","url","put","catch","error","App_Persons","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a00ab4e9.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst remove = (id) => {\n    return axios.delete(baseUrl.concat('/',id))\n}\n\nexport default { getAll, create, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport axios from 'axios'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notif\">\n      {message}\n    </div>\n  )\n}\n\nconst ErorrMessage = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n  <div>\n     filter shown with <input value={props.newFilter}\n     onChange={props.handleFilterChange}/>\n  </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addName}>\n    <div>\n      name: <input value={props.newName}\n      onChange={props.handleNameChange}\n      />\n    </div>\n    <div>\n      number: <input value={props.newNumber}\n      onChange={props.handleNumberChange}\n      />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nconst Persons = (props) => {\n\n  const handleRemove = (name) => {\n      const id = props.persons.find(per => per.name === name).id\n      const result = window.confirm(`Delete ${name} ?`)  \n      if (result) {\n        personService\n          .remove(id)\n          .then(() => {\n            const updatedPersons = props.persons.filter( (person) => {\n                return person.name !== name\n            })\n            props.setPersons(updatedPersons)\n            props.setNotification(\n              `Deleted ${name}`\n            )\n            setTimeout(() => {\n              props.setNotification(null)\n            }, 5000)\n          })\n      }\n  } \n\n\n\n  const rows = () => {\n    if (props.newFilter.length === 0) {\n      return (\n        props.persons.map( person =>\n          <div key={person.name}> {person.name} {person.number} \n            <button onClick={() => handleRemove(person.name)}>delete</button>\n          </div>\n          )\n      )\n    } \n      return (\n        props.persons.filter( function(person) {\n          return person.name.toUpperCase().includes(props.newFilter.toUpperCase())\n        }).map( person =>\n          <div key={person.name}> {person.name} {person.number} \n            <button onClick={() => handleRemove(person.name)}>delete</button>\n          </div>\n          )\n      )\n  }\n\n  return (\n    rows()\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [notification, setNotification] = useState(null)\n  const [errorMessage, setError] = useState(null)\n\nuseEffect( () => {\n  personService\n    .getAll()\n    .then(response => {\n      setPersons(response.data)\n    })\n}, [])\n\nconst handleNameChange = (event) => {\n  setNewName(event.target.value)\n}\n\nconst handleNumberChange = (event) => {\n  setNewNumber(event.target.value)\n}\n\nconst handleFilterChange = (event) => {\n  setNewFilter(event.target.value)\n}\n\nconst addName = (event) => {\n  event.preventDefault()\n  const nameObject = {\n    name: newName,\n    number: newNumber\n  }\n  if (persons.map(person => person.name).includes(newName)) {\n    const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n    if (result) {\n      const id = persons.find(per => per.name === newName).id\n      const url = `/api/persons/${id}`\n      axios.put(url, nameObject).then(response => {\n          setPersons(persons.map(per => per.name !== newName ? per : response.data))\n          setNewName('')\n          setNewNumber('')\n          setNotification(\n            `Updated ${nameObject.name}`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n      }).catch(error => {\n        setError(\n          `Information of ${nameObject.name} has already been removed from server`\n        )\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n    }\n  } else {\n    personService\n      .create(nameObject)\n      .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setNotification(\n            `Added ${nameObject.name}`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 5000)\n      })\n      .catch(error => {\n        setError(\n          error.response.data.error\n        )\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n  }\n  \n}\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <ErorrMessage message={errorMessage}/>\n        <Notification message={notification} />\n        <Filter newFilter={newFilter}\n        handleFilterChange={handleFilterChange}/>\n      <h3>Add a new</h3>\n        <PersonForm addName={addName} newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h3>Numbers</h3>\n        <Persons newFilter={newFilter} setPersons={setPersons}\n         persons={persons} setNotification={setNotification}/>\n    </div>\n    \n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}